[["index.html", "Wildfires Affect on East Troublesome Watershed 1 Introduction", " Wildfires Affect on East Troublesome Watershed Madison Thompson 3/28/2022 1 Introduction When wildfires occur, it creates major damages through the entire land and ecosystem of the area. A large part of the ecosystem that is affected is the watershed of the area. When a wildfire burns through the area it creates long-term affects that can alter the streamflow and water quality of that watershed. These wildfires were once a common natural occurrence in most forest ecosystems that did not have a devastating effect on the land. But in more recent years things such as climate change, fuel load accumulation, extensive droughts, and an increase in human presence in forests has caused a devastating effect on the land when these wildfires burn. The concern that comes from these factors has put a heavier strain on the understanding on how the landscape changes and reacts to the wildfire. There is a need to understand the interaction between wildfire, and associated responses in vegetation cover, and hydrologic and geomorphic behavior. (Owens et al. 2013) When a wildfire burns it way through the land it often causes dramatic changes in forest vegetation structure and soil conditions, it also alters the watershed processes that control streamflow, soil erosion, nutrient export, and downstream water chemistry (Hohner et al. 2019). The effect of erosion, infiltration, runoff, and slope failure play a major role in how the land is re-molded. These changes can include the streamflow, landscape, and the soil of the land. When a forest is undisturbed its soils have relatively high infiltration rates that helps to control runoff effects. Wildfires can reduce infiltration by exposing mineral soil to rain drop impact and splash that can seal soil pores at the surface (Ice, Neary, and Adams, n.d.). The effect that comes from the wildfire then causes dramatic changes in both annual and peak streamflows. The wildfires remove features from the land that shows decreased infiltration rates and increased runoff rates. As seen with high-severity fires heat the mineral soil and consume all vegetative ground cover, leaving only ash at the soil surface (Kunze and Stednick 2006). With the features burned away from the land it decreases infiltration and increases runoff creating a negative effect to streamflow and water quality. Reduced infiltration then promotes overland flow, surface erosion, runoff, and sediment that contributes to debris and extreme channel impacts that affect streamflow. These effects from a wildfire creates a domino effect that starts with the forest ecosystem and begins to alter the land and watershed from the most obvious to the least observed occurrences. After the wildfire causes changes to the watersheds soil and hydrologic system it then leads to further effects on the land and water quality. Sediment load, flooding, runoff, and erosion create new factors to consider. These large erosion events, such as those caused by wildfire, are short-lived on geological time scales, but can dominate the long-term sediment yield response(Murphy, McCLESKEY, and Writer, n.d.). This is an important factor to consider because of the water quality of the watershed. The mineralization of organic matter, interruption of root uptake, and loss of shade can further impact water quality by increasing stream temperatures and nutrient concentrations (Ice, Neary, and Adams, n.d.). Most water quality issues that occur in each watershed is seen after the wildfire is out. The postfire effects that is seen on the water quality has to do with water surface composition and the drinking water treatment. Once down-stream the water quality effects is better seen at water treatment plants and what needs to be done now to purify the water that was affected by postfire conditions. Extreme postfire erosion can damage infrastructure, accumulate in reservoirs, and challenge coagulation, filtration, and solids handling processes (Hohner et al. 2019). With all these factors occurring it causes these water treatment facilities to adapt to these new quality features so that the people dependent on that water source can still use the water source. Changes in the quantity and composition of dissolved organic matter (DOM) exported from burned watersheds can influence treatment process performance and the formation of disinfection byproducts (DBPs) (Hohner et al. 2019). This is important to understand to see the effects the wildfire has on the water quality. Here it is seen that even after the fire is out it does not mean the effects of the fire is gone. In the state of Colorado warmer spring air temperatures and longer wildfire seasons in the western US (Mast et al. 2016) had created the land for larger and longer wildfire season. This increase has created concern for larger fires to appear across Colorados Front Range. With the possibility of even larger fires to occur it creates instability in the land once the fire burn through it, which creates alterations to the watersheds associated with the fire. Postfire the largest change in the land is the increase in runoff and erosion. The effects that come from runoff and erosion has pushed for efforts to better understand wildfires in the Colorado Front Range and effects it has on the soil and water quality. An example of a wildfire that has affected a watershed was that of the East Troublesome Fire that occurred the afternoon of October 14, 2020. Fire behavior played a large role in the severity of impacts to soil in the East Troublesome fire (Forest 2020). The fire also altered the watershed of this area due to the location of this wildfire. The fire burned at a high elevation which is composed of a dominated snowmelt watershed attached to the Upper Colorado River. The watershed response within the burned area will likely include an initial flush of ash, rill, and gully erosion in headwater drainages and on steep slopes, areas with snowmelt peak flows elevated over 50% relative to pre-fire, sediment-laden flash floods following high-intensity rain events, and potentially debris flows (Forest 2020). This effect on the watershed can affect the soil, land, and water quality. The streamflow is also highly affected by such a fire due to the debris that fall into the streams. Debris flows are among the most hazardous consequences of rainfall on burned hillslopes (Forest 2020). These kinds of debris can affect the streamflow and effect the watershed overall. This study will be looking more into the East Troublesome Fire and the effects, it has had on the streamflow and water quality of the watershed. "],["methods.html", "2 Methods 2.1 USGS Sites 2.2 Downloaded Discharge Data 2.3 Specific Conductance Data 2.4 Turbidity 2.5 Combined Data 2.6 Site Discription", " 2 Methods Downloaded data from USGS site number 09014050 that is at the Grand lake outlet that was affected by the East Troublesome Fire. Downloaded data from USGS site number 09034250 that is along troublesome creek and the Colorado river that was affected by the East Troublesome Fire. Downloaded data from USGS site number 09040500 that is along the Colorado River that was affected by the East Troublesome Fire. 2.1 USGS Sites site_no &lt;- &quot;09034250&quot; site_no2 &lt;- &quot;09040500&quot; site_no3 &lt;- &quot;09014050&quot; control_site &lt;- &quot;09060799&quot; 2.2 Downloaded Discharge Data # Discharge data pulled form the site_no from 10/01/1986 to 1/1/2022 q &lt;- readNWISdv(siteNumbers = site_no, parameterCd = &#39;00060&#39;, startDate = &#39;1986-10-01&#39;, endDate = &#39;2022-01-01&#39;) %&gt;% rename(q_cfs = X_00060_00003) %&gt;% addWaterYear(.) %&gt;% select(-agency_cd, -X_00060_00003_cd) # site_no2 q2 &lt;- readNWISdv(siteNumbers = site_no2, parameterCd = &#39;00060&#39;, startDate = &#39;1986-10-01&#39;, endDate = &#39;2022-01-01&#39;) %&gt;% rename(q_cfs = X_00060_00003) %&gt;% addWaterYear(.) %&gt;% select(-agency_cd, -X_00060_00003_cd) # site_no3 q3 &lt;- readNWISdv(siteNumbers = site_no3, parameterCd = &#39;00060&#39;, startDate = &#39;1986-10-01&#39;, endDate = &#39;2022-01-01&#39;) %&gt;% rename(q_cfs = X_00060_00003) %&gt;% addWaterYear(.) %&gt;% select(-agency_cd, -X_00060_00003_cd) # control site qC &lt;- readNWISdv(siteNumbers = control_site, parameterCd = &#39;00060&#39;, startDate = &#39;1986-10-01&#39;, endDate = &#39;2022-01-01&#39;) %&gt;% rename(q_cfs = X_00060_00003) %&gt;% addWaterYear(.) %&gt;% select(-agency_cd, -X_00060_00003_cd) 2.2.1 Mean Monthly Discharge site 09034250 q_month_means &lt;- q%&gt;% mutate(month = month(Date), year = year(Date))%&gt;% group_by(year, month)%&gt;% summarize(q_mean = mean(q_cfs, na.rm=T)) ## `summarise()` has grouped output by &#39;year&#39;. You can override using the `.groups` argument. 2.2.2 Min Monthly Discharge site 09034250 q_month_mins &lt;- q%&gt;% mutate(month = month(Date), year = year(Date))%&gt;% group_by(year, month)%&gt;% summarize(q_min = min(q_cfs)) ## `summarise()` has grouped output by &#39;year&#39;. You can override using the `.groups` argument. 2.2.3 Median Monthly Discharge site 09034250 q_month_medians &lt;- q%&gt;% mutate(month = month(Date), year = year(Date))%&gt;% group_by(year, month)%&gt;% summarize(q_median = median(q_cfs)) ## `summarise()` has grouped output by &#39;year&#39;. You can override using the `.groups` argument. 2.3 Specific Conductance Data # Specific conductance data pulled from the sites from 10/01/1986 to 1/1/2022 sc &lt;- readNWISdv(siteNumbers = site_no, parameterCd = &#39;00095&#39;, startDate = &#39;1986-10-01&#39;, endDate = &#39;2021-09-30&#39;)%&gt;% rename(sc_uscm = X_00095_00003) sc2 &lt;- readNWISdv(siteNumbers = site_no2, parameterCd = &#39;00095&#39;, startDate = &#39;1986-10-01&#39;, endDate = &#39;2021-09-30&#39;)%&gt;% rename(sc_uscm = X_00095_00003) # alt3 &lt;- readNWISdv(siteNumbers = site_no3, parameterCd = &#39;00095&#39;, startDate = &#39;1986-10-01&#39;, endDate = &#39;2022-01-01&#39;)%&gt;% rename(sc_uscm = X_00095_00003) # sc3 &lt;- readNWISdv(siteNumbers = site_no3, parameterCd = &#39;00095&#39;, startDate = &#39;1986-10-01&#39;, endDate = &#39;2022-01-01&#39;)%&gt;% rename(sc_uscm = X_00095_00003)%&gt;% addWaterYear(.) %&gt;% select(-agency_cd, -X_00095_00003_cd) 2.3.1 Joined Data allsc &lt;- full_join(sc, sc2, alt3, by = c(&#39;Date&#39;,&#39;site_no&#39;, &#39;sc_uscm&#39;)) w_sc &lt;- spread(allsc, site_no, sc_uscm) 2.3.2 Mean Monthly Data sc_month_means &lt;- sc%&gt;% mutate(month = month(Date), year = year(Date))%&gt;% group_by(year, month)%&gt;% summarize(sc_mean = mean(sc_uscm, na.rm=T)) ## `summarise()` has grouped output by &#39;year&#39;. You can override using the `.groups` argument. sc2_month_means &lt;- sc2%&gt;% mutate(month = month(Date), year = year(Date))%&gt;% group_by(year, month)%&gt;% summarize(sc2_mean = mean(sc_uscm, na.rm=T)) ## `summarise()` has grouped output by &#39;year&#39;. You can override using the `.groups` argument. sc3_month_means &lt;- sc3%&gt;% mutate(month = month(Date), year = year(Date))%&gt;% group_by(year, month)%&gt;% summarize(sc3_mean = mean(sc_uscm, na.rm=T)) ## `summarise()` has grouped output by &#39;year&#39;. You can override using the `.groups` argument. 2.3.3 Min Monthly Data sc_month_min &lt;- sc%&gt;% mutate(month = month(Date), year = year(Date))%&gt;% group_by(year, month)%&gt;% summarize(sc_min = min(sc_uscm, na.rm=T)) ## `summarise()` has grouped output by &#39;year&#39;. You can override using the `.groups` argument. sc2_month_min &lt;- sc2%&gt;% mutate(month = month(Date), year = year(Date))%&gt;% group_by(year, month)%&gt;% summarize(sc2_min = min(sc_uscm, na.rm=T)) ## `summarise()` has grouped output by &#39;year&#39;. You can override using the `.groups` argument. sc3_month_min &lt;- sc3%&gt;% mutate(month = month(Date), year = year(Date))%&gt;% group_by(year, month)%&gt;% summarize(sc3_min = min(sc_uscm, na.rm=T)) ## `summarise()` has grouped output by &#39;year&#39;. You can override using the `.groups` argument. 2.3.4 Median Monthly Data sc_month_median &lt;- sc%&gt;% mutate(month = month(Date), year = year(Date))%&gt;% group_by(year, month)%&gt;% summarize(sc_median = median(sc_uscm, na.rm=T)) ## `summarise()` has grouped output by &#39;year&#39;. You can override using the `.groups` argument. sc2_month_median &lt;- sc2%&gt;% mutate(month = month(Date), year = year(Date))%&gt;% group_by(year, month)%&gt;% summarize(sc2_median = median(sc_uscm, na.rm=T)) ## `summarise()` has grouped output by &#39;year&#39;. You can override using the `.groups` argument. sc3_month_median &lt;- sc3%&gt;% mutate(month = month(Date), year = year(Date))%&gt;% group_by(year, month)%&gt;% summarize(sc3_median = median(sc_uscm, na.rm=T)) ## `summarise()` has grouped output by &#39;year&#39;. You can override using the `.groups` argument. 2.4 Turbidity # site 1 daily turbidity T1 &lt;- readNWISuv(siteNumbers = site_no, parameterCd = &#39;63680&#39;)%&gt;% mutate(dateTime = lubridate::as_datetime(dateTime), date = lubridate::as_date(dateTime))%&gt;% group_by(site_no, date)%&gt;% summarize(mean_T1 = mean(X_63680_00000)) ## `summarise()` has grouped output by &#39;site_no&#39;. You can override using the `.groups` argument. write_csv(T1,&#39;data/T1maddy.csv&#39;) Turbidity_1 &lt;- read_csv(&#39;data/T1maddy.csv&#39;)%&gt;% rename( Date = date) ## Rows: 102 Columns: 3 ## -- Column specification ---------------------------------------------------------------------------- ## Delimiter: &quot;,&quot; ## chr (1): site_no ## dbl (1): mean_T1 ## date (1): date ## ## i Use `spec()` to retrieve the full column specification for this data. ## i Specify the column types or set `show_col_types = FALSE` to quiet this message. # site 2 daily turbidity T2 &lt;- readNWISuv(siteNumbers = site_no2, parameterCd = &#39;63680&#39;)%&gt;% mutate(dateTime = lubridate::as_datetime(dateTime), date = lubridate::as_date(dateTime))%&gt;% group_by(site_no, date)%&gt;% summarize(mean_T2 = mean(X_63680_00000)) ## `summarise()` has grouped output by &#39;site_no&#39;. You can override using the `.groups` argument. write_csv(T2,&#39;data/T2maddy.csv&#39;) Turbidity_2 &lt;- read_csv(&#39;data/T2maddy.csv&#39;)%&gt;% rename( Date = date) ## Rows: 117 Columns: 3 ## -- Column specification ---------------------------------------------------------------------------- ## Delimiter: &quot;,&quot; ## chr (1): site_no ## dbl (1): mean_T2 ## date (1): date ## ## i Use `spec()` to retrieve the full column specification for this data. ## i Specify the column types or set `show_col_types = FALSE` to quiet this message. # site 3 daily turbidity T3 &lt;- readNWISuv(siteNumbers = site_no3, parameterCd = &#39;63680&#39;)%&gt;% mutate(dateTime = lubridate::as_datetime(dateTime), date = lubridate::as_date(dateTime))%&gt;% group_by(site_no, date)%&gt;% summarize(mean_T3 = mean(X_63680_00000)) ## `summarise()` has grouped output by &#39;site_no&#39;. You can override using the `.groups` argument. write_csv(T3,&#39;data/T3maddy.csv&#39;) Turbidity_3 &lt;- read_csv(&#39;data/T3maddy.csv&#39;)%&gt;% rename( Date = date) ## Rows: 3195 Columns: 3 ## -- Column specification ---------------------------------------------------------------------------- ## Delimiter: &quot;,&quot; ## chr (1): site_no ## dbl (1): mean_T3 ## date (1): date ## ## i Use `spec()` to retrieve the full column specification for this data. ## i Specify the column types or set `show_col_types = FALSE` to quiet this message. # control site daily turbidity TC &lt;- readNWISuv(siteNumbers = control_site, parameterCd = &#39;63680&#39;)%&gt;% mutate(dateTime = lubridate::as_datetime(dateTime), date = lubridate::as_date(dateTime))%&gt;% group_by(site_no, date)%&gt;% summarize(mean_TC = mean(X_63680_00000)) ## `summarise()` has grouped output by &#39;site_no&#39;. You can override using the `.groups` argument. write_csv(TC,&#39;data/TCmaddy.csv&#39;) Turbidity_C &lt;- read_csv(&#39;data/T3maddy.csv&#39;)%&gt;% rename( Date = date) ## Rows: 3195 Columns: 3 ## -- Column specification ---------------------------------------------------------------------------- ## Delimiter: &quot;,&quot; ## chr (1): site_no ## dbl (1): mean_T3 ## date (1): date ## ## i Use `spec()` to retrieve the full column specification for this data. ## i Specify the column types or set `show_col_types = FALSE` to quiet this message. 2.5 Combined Data 2.5.1 Discharge Q_c &lt;- rbind(q,q2,q3,qC) 2.5.2 Turbidity 2.6 Site Discription USGS 09014050 GRAND LAKE OUTLET BLW CHIPMUNK LN AT GRAND LK, CO USGS site 09034250 COLORADO RIVER AT WINDY GAP, NEAR GRANBY, CO. USGS 09040500 TROUBLESOME CREEK NEAR TROUBLESOME, CO. 2.6.1 Deliniated Watershed watershed &lt;- st_read(&#39;Granby.geojson&#39;)%&gt;% dplyr::filter(id==&#39;globalwatershed&#39;) ## Reading layer `Granby&#39; from data source `C:\\Rstudio\\WR 440\\GIT\\watershed_wildfires\\Granby.geojson&#39; using driver `GeoJSON&#39; ## Simple feature collection with 2 features and 1 field ## Geometry type: GEOMETRY ## Dimension: XY ## Bounding box: xmin: -106.1475 ymin: 39.78574 xmax: -105.6262 ymax: 40.48617 ## Geodetic CRS: WGS 84 mapview(watershed) watershed_2 &lt;- st_read(&#39;Troublesome.geojson&#39;)%&gt;% dplyr::filter(id==&#39;globalwatershed&#39;) ## Reading layer `Troublesome&#39; from data source ## `C:\\Rstudio\\WR 440\\GIT\\watershed_wildfires\\Troublesome.geojson&#39; using driver `GeoJSON&#39; ## Simple feature collection with 2 features and 1 field ## Geometry type: GEOMETRY ## Dimension: XY ## Bounding box: xmin: -106.3975 ymin: 40.05574 xmax: -106.1147 ymax: 40.36097 ## Geodetic CRS: WGS 84 mapview(watershed_2) "],["results.html", "3 Results 3.1 Discharge Data 3.2 Specific Conductance Data 3.3 Turbidity 3.4 Comnined Data", " 3 Results 3.1 Discharge Data 3.1.1 Plotted Data # Plot for discharge ggplot(q, aes(x = Date, y = q_cfs)) + geom_line() + ylab(&#39;Q (cfs)&#39;) ## Warning: Removed 38 row(s) containing missing values (geom_path). # site_no2 ggplot(q2, aes(x = Date, y = q_cfs)) + geom_line() + ylab(&#39;Q (cfs)&#39;) ## Warning: Removed 23 row(s) containing missing values (geom_path). # site_no3 ggplot(q3, aes(x = Date, y = q_cfs)) + geom_line() + ylab(&#39;Q (cfs)&#39;) # control site ggplot(qC, aes(x = Date, y = q_cfs)) + geom_line() + ylab(&#39;Q (cfs)&#39;) 3.1.2 Trending Month Mean, Min, and Median Data ggplot(q_month_means, aes(x = year, y = q_mean))+ geom_point()+ facet_wrap(~month, scales =&#39;free&#39;,)+ scale_y_log10()+ labs(title = &#39;Monthly Mean Dishcarge&#39;, caption = &#39;Mean dishcarge for January (1) to December (12) from the year 1986 to 2021&#39;, x = &#39;Q (cfs)&#39;, y = &#39;Years&#39;) ## Warning: Removed 2 rows containing missing values (geom_point). ggplot(q_month_mins, aes(x = year, y = q_min))+ geom_point()+ facet_wrap(~month, scales =&#39;free&#39;)+ scale_y_log10()+ labs(title = &#39;Monthly Minimum Discharge&#39;, caption = &#39;Minimum dishcarge for January (1) to December (12) from the year 1986 to 2021&#39;, x = &#39;Q (cfs)&#39;, y = &#39;Years&#39;) ## Warning: Removed 3 rows containing missing values (geom_point). ggplot(q_month_medians, aes(x = year, y = q_median))+ geom_point()+ facet_wrap(~month, scales =&#39;free&#39;)+ scale_y_log10()+ labs(title = &#39;Monthly Median Discharge&#39;, caption = &#39;Median dishcarge for January (1) to December (12) from the year 1986 to 2021&#39;, x = &#39;Q (cfs)&#39;, y = &#39;Years&#39;) ## Warning: Removed 3 rows containing missing values (geom_point). 3.2 Specific Conductance Data 3.2.1 Plotted Data # Plot for specific conductance ggplot(sc, aes(x = Date, y = sc_uscm)) + geom_point(size = 1) + geom_line(size = 0.5) + labs(title = &#39;Specific Conductance USGS site 09034250&#39;, caption = &#39;Specific Conductance data from USGS site 09034250 from 2021-06-24 to 2021-09-30&#39;, x = &#39;Date&#39;, y = &#39;SC (uS/cm)&#39;) ggplot(sc2, aes(x = Date, y = sc_uscm)) + geom_point(size = 1) + geom_line(size = 0.5) + labs(title = &#39;Specific Conductance USGS site 09040500&#39;, caption = &#39;Specific Conductance data from USGS site 09040500 from 2021-06-08 to 2021-09-30&#39;, x = &#39;Date&#39;, y = &#39;SC (uS/cm)&#39;) ggplot(sc3, aes(x = Date, y = sc_uscm)) + geom_point(size = 1) + geom_line(size = 0.5) + labs(title = &#39;Specific Conductance USGS site 09014050&#39;, caption = &#39;Specific Conductance data from USGS site 09014050 from 2011-09-30 to 2021-09-30&#39;, x = &#39;Year&#39;, y = &#39;SC (uS/cm)&#39;) 3.2.2 Trending Months Mean, Min, and Median Data ggplot(sc3_month_means, aes(x = year, y = sc3_mean))+ geom_point()+ facet_wrap(~month, scales =&#39;free&#39;,)+ scale_y_log10()+ labs(title = &#39;Monthly Mean Specific Conductance USGS site 09014050&#39;, caption = &#39;Mean Specific Conductance for January (1) to December (12) from 2011-09-30 to 2021-09-30&#39;, x = &#39;Years&#39;, y = &#39;SC (uS/cm)&#39;) ggplot(sc3_month_min, aes(x = year, y = sc3_min))+ geom_point()+ facet_wrap(~month, scales =&#39;free&#39;,)+ scale_y_log10()+ labs(title = &#39;Monthly Min Specific Conductance USGS site 09014050&#39;, caption = &#39;Minimum Specific Conductance for January (1) to December (12) from 2011-09-30 to 2021-09-30&#39;, x = &#39;Years&#39;, y = &#39;SC (uS/cm)&#39;) ggplot(sc3_month_median, aes(x = year, y = sc3_median))+ geom_point()+ facet_wrap(~month, scales =&#39;free&#39;,)+ scale_y_log10()+ labs(title = &#39;Monthly Median Specific Conductance USGS site 09014050&#39;, caption = &#39;Median Specific Conductance for January (1) to December (12) from 2011-09-30 to 2021-09-30&#39;, x = &#39;Years&#39;, y = &#39;SC (uS/cm)&#39;) 3.3 Turbidity # site 1 ggplot(Turbidity_1, aes(x = Date, y = mean_T1)) + geom_line(size = 1) + labs(title = &#39;Turbidity USGS site 09034250&#39;, caption = &#39;Turbidity data from USGS site 09034250 from 2021-06-22 to 2021-10-01&#39;, x = &#39;Date&#39;, y = &#39;T (formazin nephelometric units (FNU))&#39;) # site 2 ggplot(Turbidity_2, aes(x = Date, y = mean_T2)) + geom_line(size = 1) + labs(title = &#39;Turbidity USGS site 09040500&#39;, caption = &#39;Turbidity data from USGS site 09040500 from 2021-06-07 to 2021-10-01&#39;, x = &#39;Date&#39;, y = &#39;T (formazin nephelometric units (FNU))&#39;) # site 3 ggplot(Turbidity_3, aes(x = Date, y = mean_T3)) + geom_line(size = 1) + labs(title = &#39;Turbidity USGS site 09014050&#39;, caption = &#39;Turbidity data from USGS site 09014050 from 2010-04-13 to 2021-10-01&#39;, x = &#39;Date&#39;, y = &#39;T (formazin nephelometric units (FNU))&#39;) #control site ggplot(Turbidity_C, aes(x = Date, y = mean_T3)) + geom_line(size = 1) + labs(title = &#39;Turbidity USGS site 09060799&#39;, caption = &#39;Turbidity data from USGS site 09060799 from 2021-07-15 to 2022-04-07&#39;, x = &#39;Date&#39;, y = &#39;T (formazin nephelometric units (FNU))&#39;) 3.4 Comnined Data 3.4.0.1 Discharge ggplot(Q_c, aes(x= site_no, y= q_cfs))+ geom_boxplot() ## Warning: Removed 67 rows containing non-finite values (stat_boxplot). "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
